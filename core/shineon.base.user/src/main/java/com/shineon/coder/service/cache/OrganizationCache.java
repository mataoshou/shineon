package com.shineon.coder.service.cache ;import com.shineon.coder.db.pojo.RmtOrganizationInfo;import com.shineon.coder.service.convert.util.RmtOrganizationInfoCommonUtil;import com.shineon.coder.service.feign.OrganizationFeign;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import com.shineon.coder.kernel.util.SpringUtil;import com.shineon.coder.kernel.constant.cache.OrganizationCacheConstant;import com.shineon.coder.db.pojo.QueryItem;import com.shineon.coder.service.convert.CommonItem;import java.util.List;@Service@Slf4jpublic class OrganizationCache extends IBaseCache<RmtOrganizationInfo,RmtOrganizationInfoCommonUtil> {	public void initCache()	{		setCommonutil(SpringUtil.getBean(RmtOrganizationInfoCommonUtil.class));		setCacheDecorate(OrganizationCacheConstant.CACHE_PRE,OrganizationCacheConstant.CACHE_LAST);	}	@Autowired	OrganizationFeign feign;		@Override	protected boolean check(String key) {		return true;	}		@Override	protected boolean success(String key, List<RmtOrganizationInfo> pojos) {		return true;	}		@Override	protected boolean fail(String key, List<RmtOrganizationInfo> pojos, Exception e) {		return true;	}		@Override	protected String getKeyParams(RmtOrganizationInfo pojo) {		return pojo.getId();	}		@Override	protected CommonItem selectListByDB(QueryItem queryItem) {		CommonItem item = queryItemCommonUtil.toCommon(queryItem);		return feign.list(item);	}		@Override	protected CommonItem getPojoByDB(QueryItem queryItem) {		CommonItem item = queryItemCommonUtil.toCommon(queryItem);		return feign.get(item);	}		@Override	protected CommonItem updatePojoByDB(RmtOrganizationInfo pojo) {			CommonItem item = commonutil.toCommon(pojo);			return feign.edit(item);	}		@Override	protected void deletePojoByDB(RmtOrganizationInfo pojo) {		CommonItem item = commonutil.toCommon(pojo);		feign.delete(item);	}	}