package com.shineon.coder.service.convert.base ;import java.util.Date;;import com.shineon.coder.db.pojo.MessageItem;;import com.shineon.coder.service.convert.CommonData;import java.util.ArrayList;import java.util.List;import org.springframework.beans.factory.annotation.Autowired;import com.shineon.coder.service.convert.CommonItemUtils;import com.shineon.coder.service.convert.CommonItem;import com.shineon.coder.service.convert.CommonItemUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;public class MessageItemCommonBase implements CommonItemUtils{	Logger logger = LoggerFactory.getLogger(getClass());	
	private CommonData toCommonData( MessageItem pojo) {		CommonData data = new CommonData();		data.setName(pojo.getName());		data.setInterval(pojo.getInterval());		return data;	}	
	private MessageItem toPojoData( CommonData data) {		MessageItem pojo = new MessageItem();		pojo.setName(data.getName());		pojo.setInterval(data.getInterval());		return pojo;	}	
	public CommonItem toCommon( MessageItem pojo) {		return success(toCommonData(pojo));	}	
	public  CommonItem toCommon( List<MessageItem> pojos) {		List<CommonData> result = new ArrayList();		for(MessageItem item : pojos){			result.add(toCommonData(item));		}		return success(result);	}	
	public MessageItem toPojo( CommonItem item) {		List<CommonData> datas = item.getDatas();		if(datas ==null||datas.size()==0){logger.debug("CommonItem 中data数据为空!!"); return null;}		if(datas.size()>1){logger.debug("CommonItem 中data数据不止一条数据!!"); }		return toPojoData(datas.get(0));	}	
	public List<MessageItem> toPojoList(  CommonItem item) {		List<MessageItem> result = new ArrayList();			List<CommonData> datas = item.getDatas();			for(CommonData data : datas){				result.add(toPojoData(data));			}			return result;		}		
}