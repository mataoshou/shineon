package com.shineon.coder.service.cache ;import com.shineon.coder.db.pojo.MqMessage;import com.shineon.coder.db.pojo.QueryItem;import com.shineon.coder.kernel.constant.cache.CacheConstant;import com.shineon.coder.kernel.constant.cache.MessageCacheConstant;import com.shineon.coder.kernel.util.SpringUtil;import com.shineon.coder.service.convert.CommonItem;import com.shineon.coder.service.convert.util.MqMessageCommonUtil;import lombok.extern.slf4j.Slf4j;import org.springframework.stereotype.Service;import java.util.List;@Service@Slf4jpublic class MessageCache extends IBaseCache<MqMessage, MqMessageCommonUtil> {	public void initCache()	{		setCommonutil(SpringUtil.getBean(MqMessageCommonUtil.class));		setCacheDecorate(MessageCacheConstant.CACHE_PRE,MessageCacheConstant.CACHE_LAST);		setPojo_sign(CacheConstant.CACHE_MESSAGE_POJO_SIGN);		setList_sign(CacheConstant.CACHE_MESSAGE_LIST_SIGN);	}	{//		setList_sign();//		setPojo_sign();	}	@Override	protected boolean check(String key) {		return true;	}		@Override	protected boolean success(String key, List<MqMessage> pojos) {		return true;	}		@Override	protected boolean fail(String key, List<MqMessage> pojos, Exception e) {		return true;	}		@Override	protected String getKeyParams(MqMessage pojo) {		return pojo.getId();	}		@Override	protected CommonItem selectListByDB(QueryItem queryItem) {		return null;	}		@Override	protected CommonItem getPojoByDB(QueryItem queryItem) {		return null;	}		@Override	protected CommonItem updatePojoByDB(MqMessage pojo) {		return commonutil.toCommon(pojo);	}		@Override	protected void deletePojoByDB(MqMessage pojo) {	}	}