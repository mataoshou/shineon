package com.shineon.coder.service.dto ;import com.shineon.coder.db.pojo.QueryItem;import com.shineon.coder.db.sql.pojo.RmtPrivilegeGroupInfo;import com.shineon.coder.kernel.util.StringUtil;import com.shineon.coder.service.bo.PrivilegeGroupBO;import com.shineon.coder.service.convert.CommonItem;import com.shineon.coder.service.convert.util.QueryItemCommonUtil;import com.shineon.coder.service.convert.util.RmtPrivilegeGroupInfoCommonUtil;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;@Service@Slf4jpublic class PrivilegeGroupDTO {		@Autowired	QueryItemCommonUtil queryItemCommonUtil;	@Autowired	PrivilegeGroupBO bo;	@Autowired	RmtPrivilegeGroupInfoCommonUtil commonUtil;	@Autowired	StringUtil stringUtil;	public RmtPrivilegeGroupInfo get(CommonItem item) throws Exception{		QueryItem query = queryItemCommonUtil.toPojo(item);		return bo.get(query.getId());	}		public RmtPrivilegeGroupInfo edit(CommonItem item) throws Exception{		RmtPrivilegeGroupInfo groupInfo = commonUtil.toPojo(item);		if(stringUtil.isEmpty(groupInfo.getId(),true,"0")){			return bo.insert(groupInfo);		}		else {			return bo.update(groupInfo);		}	}		public List<RmtPrivilegeGroupInfo> list(CommonItem item) throws Exception{		QueryItem query = queryItemCommonUtil.toPojo(item);		return bo.list();	}		public void delete(CommonItem item) throws Exception{		QueryItem query = queryItemCommonUtil.toPojo(item);		bo.delete(query.getId());	}}