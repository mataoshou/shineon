package com.shineon.coder.service.convert.base ;import java.util.Date;import com.shineon.coder.db.sql.pojo.RmtOrganizationChart;import com.shineon.coder.service.convert.CommonData;import java.util.ArrayList;import java.util.List;import org.springframework.beans.factory.annotation.Autowired;import com.shineon.coder.service.convert.CommonItemUtils;import com.shineon.coder.service.convert.CommonItem;import com.shineon.coder.service.convert.CommonItemUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;public class RmtOrganizationChartCommonBase implements CommonItemUtils{	Logger logger = LoggerFactory.getLogger(getClass());	
	private CommonData toCommonData( RmtOrganizationChart pojo) {		CommonData data = new CommonData();		data.setId(pojo.getId());		data.setParent(pojo.getOrganizationid());		data.setCreator(pojo.getOrganizationname());		data.setTitle(pojo.getLevelinfo());		data.setPtitle(pojo.getParentid());		data.setCreateTime(pojo.getCreatedtime());		data.setContent(pojo.getCreateuserid());		data.setBeginTime(pojo.getModifiedtime());		data.setGroup(pojo.getModifyuserid());		data.setEndTime(pojo.getDeletedtime());		data.setThumb(pojo.getDeleteduserid());		return data;	}	
	private RmtOrganizationChart toPojoData( CommonData data) {		RmtOrganizationChart pojo = new RmtOrganizationChart();		pojo.setId(data.getId());		pojo.setOrganizationid(data.getParent());		pojo.setOrganizationname(data.getCreator());		pojo.setLevelinfo(data.getTitle());		pojo.setParentid(data.getPtitle());		pojo.setCreatedtime(data.getCreateTime());		pojo.setCreateuserid(data.getContent());		pojo.setModifiedtime(data.getBeginTime());		pojo.setModifyuserid(data.getGroup());		pojo.setDeletedtime(data.getEndTime());		pojo.setDeleteduserid(data.getThumb());		return pojo;	}	
	public CommonItem toCommon( RmtOrganizationChart pojo) {		return success(toCommonData(pojo));	}	
	public  CommonItem toCommon( List<RmtOrganizationChart> pojos) {		List<CommonData> result = new ArrayList();		for(RmtOrganizationChart item : pojos){			result.add(toCommonData(item));		}		return success(result);	}	
	public RmtOrganizationChart toPojo( CommonItem item) {		List<CommonData> datas = item.getDatas();		if(datas ==null||datas.size()==0){logger.debug("CommonItem 中data数据为空!!"); return null;}		if(datas.size()>1){logger.debug("CommonItem 中data数据不止一条数据!!"); }		return toPojoData(datas.get(0));	}	
	public List<RmtOrganizationChart> toPojoList(  CommonItem item) {		List<RmtOrganizationChart> result = new ArrayList();			List<CommonData> datas = item.getDatas();			for(CommonData data : datas){				result.add(toPojoData(data));			}			return result;		}		
}