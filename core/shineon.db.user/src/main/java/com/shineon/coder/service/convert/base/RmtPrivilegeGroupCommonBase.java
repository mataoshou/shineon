package com.shineon.coder.service.convert.base ;import com.shineon.coder.db.sql.pojo.RmtPrivilegeGroup;import com.shineon.coder.service.convert.CommonData;import com.shineon.coder.service.convert.CommonItem;import com.shineon.coder.service.convert.CommonItemUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.util.ArrayList;import java.util.List;public class RmtPrivilegeGroupCommonBase implements CommonItemUtils{	Logger logger = LoggerFactory.getLogger(getClass());		private CommonData toCommonData( RmtPrivilegeGroup pojo) {		CommonData data = new CommonData();		data.setId(pojo.getId());		data.setParent(pojo.getPrivilegegroupname());		data.setPtitle(pojo.getDescription());		data.setTitle(pojo.getPrivilegeset());		return data;	}		private RmtPrivilegeGroup toPojoData( CommonData data) {		RmtPrivilegeGroup pojo = new RmtPrivilegeGroup();		pojo.setId(data.getId());		pojo.setPrivilegegroupname(data.getParent());		pojo.setDescription(data.getPtitle());		pojo.setPrivilegeset(data.getTitle());		return pojo;	}		public CommonItem toCommon( RmtPrivilegeGroup pojo) {		return success(toCommonData(pojo));	}		public  CommonItem toCommon( List<RmtPrivilegeGroup> pojos) {		List<CommonData> result = new ArrayList();		for(RmtPrivilegeGroup item : pojos){			result.add(toCommonData(item));		}		return success(result);	}		public RmtPrivilegeGroup toPojo( CommonItem item) {		List<CommonData> datas = item.getDatas();		if(datas ==null||datas.size()==0){logger.debug("CommonItem 中data数据为空!!"); return null;}		if(datas.size()>1){logger.debug("CommonItem 中data数据不止一条数据!!"); }		return toPojoData(datas.get(0));	}		public List<RmtPrivilegeGroup> toPojoList(  CommonItem item) {		List<RmtPrivilegeGroup> result = new ArrayList();			List<CommonData> datas = item.getDatas();			for(CommonData data : datas){				result.add(toPojoData(data));			}			return result;		}		}