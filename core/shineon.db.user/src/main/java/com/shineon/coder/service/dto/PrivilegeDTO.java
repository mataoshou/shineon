package com.shineon.coder.service.dto ;import com.shineon.coder.db.pojo.QueryItem;import com.shineon.coder.db.sql.pojo.RmtPrivilegeInfo;import com.shineon.coder.kernel.util.StringUtil;import com.shineon.coder.service.bo.PrivilegeBO;import com.shineon.coder.service.convert.CommonItem;import com.shineon.coder.service.convert.util.QueryItemCommonUtil;import com.shineon.coder.service.convert.util.RmtPrivilegeInfoCommonUtil;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;@Service@Slf4jpublic class PrivilegeDTO {		@Autowired	QueryItemCommonUtil queryItemCommonUtil;	@Autowired	PrivilegeBO bo;	@Autowired	RmtPrivilegeInfoCommonUtil commonUtil;	@Autowired	StringUtil stringUtil;		public RmtPrivilegeInfo get(CommonItem item) throws Exception{		QueryItem query = queryItemCommonUtil.toPojo(item);		return bo.get(query.getId());	}		public RmtPrivilegeInfo edit(CommonItem item) throws Exception{		RmtPrivilegeInfo privilegeInfo = commonUtil.toPojo(item);		if(stringUtil.isEmpty(privilegeInfo.getId(),true,"0"))		{			return bo.insert(privilegeInfo);		}		else{			return bo.update(privilegeInfo);		}	}		public List<RmtPrivilegeInfo> list(CommonItem item) throws Exception{		QueryItem query = queryItemCommonUtil.toPojo(item);		return bo.list();	}		public void delete(CommonItem item) throws Exception{		QueryItem query = queryItemCommonUtil.toPojo(item);		if(!bo.delete(query.getId())){			throw new Exception("数据删除失败！！");		}	}}