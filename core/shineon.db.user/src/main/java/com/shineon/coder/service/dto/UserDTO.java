package com.shineon.coder.service.dto ;import com.shineon.coder.db.pojo.QueryItem;import com.shineon.coder.db.sql.pojo.RmtUserInfo;import com.shineon.coder.service.bo.UserBO;import com.shineon.coder.service.convert.CommonItem;import com.shineon.coder.service.convert.util.QueryItemCommonUtil;import com.shineon.coder.service.convert.util.RmtUserInfoCommonUtil;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;@Service@Slf4jpublic class UserDTO {		@Autowired	QueryItemCommonUtil queryItemCommonUtil;		@Autowired	RmtUserInfoCommonUtil commonUtil;		@Autowired	UserBO bo;		public RmtUserInfo get(CommonItem item) throws Exception{		QueryItem query = queryItemCommonUtil.toPojo(item);		RmtUserInfo result = bo.get(query.getId());		 if(result==null) throw new Exception("数据不存在！");		return result;	}		public RmtUserInfo edit(CommonItem item) throws Exception{		RmtUserInfo pojo = commonUtil.toPojo(item);		if(pojo.getId() ==null||pojo.getId().equals("0")) {			return bo.insert(pojo);		}		else{ return bo.update(pojo); }	}		public List<RmtUserInfo> list(CommonItem item) throws Exception{		QueryItem query = queryItemCommonUtil.toPojo(item);		return bo.list();	}		public void delete(CommonItem item) throws Exception{		QueryItem query = queryItemCommonUtil.toPojo(item);		 if(!bo.delete(query.getId())){			if(!bo.delete(query.getId())){				throw new Exception("数据删除失败！！");			}		}	}		public RmtUserInfo getbyname(CommonItem item) throws Exception{		QueryItem query = queryItemCommonUtil.toPojo(item);		RmtUserInfo result = bo.getbyname(query.getTitle());		 if(result==null) throw new Exception("数据不存在！");		return result;	}}