package com.shineon.coder.service.dto ;import com.shineon.coder.db.pojo.QueryItem;import com.shineon.coder.db.sql.pojo.RmtUserInfo;import com.shineon.coder.service.bo.UserBO;import com.shineon.coder.service.convert.CommonItem;import com.shineon.coder.service.convert.util.QueryItemCommonUtil;import com.shineon.coder.service.convert.util.RmtUserInfoCommonUtil;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;@Service@Slf4jpublic class UserDTO {		@Autowired	QueryItemCommonUtil queryItemCommonUtil;	@Autowired	UserBO bo;	@Autowired	RmtUserInfoCommonUtil commonUtil;	public RmtUserInfo get(CommonItem item) throws Exception {		QueryItem query = queryItemCommonUtil.toPojo(item);		RmtUserInfo userInfo = bo.get(query.getId());		if(userInfo==null) throw new Exception("数据不存在！");		return userInfo;	}		public RmtUserInfo edit(CommonItem item) throws Exception {		RmtUserInfo userInfo = commonUtil.toPojo(item);		if(userInfo.getId() ==null||userInfo.getId().equals("0")) {			bo.insert(userInfo);		}		else{			bo.update(userInfo);		}		return bo.get(userInfo.getId());	}		public List<RmtUserInfo> list(CommonItem item) throws Exception {		QueryItem query = queryItemCommonUtil.toPojo(item);		return bo.list();	}	public RmtUserInfo delete(CommonItem item) throws Exception {		RmtUserInfo userInfo = commonUtil.toPojo(item);		return bo.delete(userInfo);	}	public RmtUserInfo getByName(CommonItem item) throws Exception {		QueryItem query = queryItemCommonUtil.toPojo(item);		return bo.getByName(query.getTitle());	}}