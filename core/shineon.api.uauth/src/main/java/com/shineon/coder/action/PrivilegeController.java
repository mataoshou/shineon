package com.shineon.coder.action ;import com.shineon.coder.db.pojo.RmtPrivilegeInfo;import com.shineon.coder.db.pojo.RmtUserInfo;import com.shineon.coder.service.convert.util.RmtPrivilegeInfoCommonUtil;import lombok.extern.slf4j.Slf4j;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.bind.annotation.RequestMapping;import com.shineon.coder.service.convert.CommonItem;import org.springframework.beans.factory.annotation.Autowired;import com.shineon.coder.service.dto.PrivilegeDTO;import com.shineon.coder.kernel.constant.action.PrivilegeActionConstant;import org.springframework.web.bind.annotation.RequestBody;import com.alibaba.fastjson.JSONObject;import com.shineon.coder.db.common.ApiResultItem;@RestController@Slf4jpublic class PrivilegeController {		@Autowired	PrivilegeDTO dto;		@Autowired	RmtPrivilegeInfoCommonUtil commonUtil;		@RequestMapping(PrivilegeActionConstant.ACTION_GET)	public ApiResultItem get(@RequestBody JSONObject params) throws Exception{		String id = params.getString("id");		RmtPrivilegeInfo privilegeInfo =new RmtPrivilegeInfo();		privilegeInfo.setId(id);		CommonItem item = commonUtil.toCommon(privilegeInfo);		return dto.get(item);	}		@RequestMapping(PrivilegeActionConstant.ACTION_EDIT)	public ApiResultItem edit(@RequestBody JSONObject params) throws Exception{		RmtPrivilegeInfo privilegeInfo =new RmtPrivilegeInfo();		privilegeInfo.setId(params.getString("id"));		privilegeInfo.setPrivilegename(params.getString("privilegename"));		privilegeInfo.setOperategroup("0");		privilegeInfo.setDescription("0");		return dto.edit(commonUtil.toCommon(privilegeInfo));	}		@RequestMapping(PrivilegeActionConstant.ACTION_LIST)	public ApiResultItem list(@RequestBody JSONObject params) throws Exception{		return dto.list(commonUtil.success());	}		@RequestMapping(PrivilegeActionConstant.ACTION_DELETE)	public ApiResultItem delete(@RequestBody JSONObject params) throws Exception{		String id = params.getString("id");		RmtPrivilegeInfo privilegeInfo =new RmtPrivilegeInfo();		privilegeInfo.setId(id);		CommonItem item = commonUtil.toCommon(privilegeInfo);		return dto.delete(item);	}}