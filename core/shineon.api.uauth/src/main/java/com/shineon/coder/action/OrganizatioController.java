package com.shineon.coder.action ;import com.shineon.coder.service.convert.util.RmtOrganizationInfoCommonUtil;import lombok.extern.slf4j.Slf4j;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.bind.annotation.RequestMapping;import com.shineon.coder.service.convert.CommonItem;import org.springframework.beans.factory.annotation.Autowired;import com.shineon.coder.service.dto.OrganizatioDTO;import com.shineon.coder.kernel.constant.action.OrganizatioControllerConstant;import org.springframework.web.bind.annotation.RequestBody;import com.alibaba.fastjson.JSONObject;import com.shineon.coder.db.common.ApiResultItem;import com.shineon.coder.db.pojo.RmtOrganizationInfo;@RestController@Slf4jpublic class OrganizatioController {	
	@Autowired	OrganizatioDTO dto;	
	@Autowired	RmtOrganizationInfoCommonUtil commonUtil;	
	@RequestMapping(OrganizatioControllerConstant.ACTION_GET)	public ApiResultItem get(@RequestBody JSONObject params) throws Exception{		RmtOrganizationInfo pojo = new RmtOrganizationInfo();		pojo.setId(params.getString("id"));		return dto.get(commonUtil.toCommon(pojo));	}	
	@RequestMapping(OrganizatioControllerConstant.ACTION_EDIT)	public ApiResultItem edit(@RequestBody JSONObject params) throws Exception{		RmtOrganizationInfo pojo = new RmtOrganizationInfo();		pojo.setId(params.getString("id"));		pojo.setOrganizationid(params.getString("organizationid"));		pojo.setOrganizationcode(params.getInteger("organizationcode"));		pojo.setOrganizationname(params.getString("organizationname"));		pojo.setOrganizationtype(params.getInteger("organizationtype"));		pojo.setDescription(params.getString("description"));		pojo.setCreatedtime(params.getDate("createdtime"));		pojo.setCreateuserid(params.getString("createuserid"));		pojo.setModifytime(params.getDate("modifytime"));		pojo.setModifyuserid(params.getString("modifyuserid"));		pojo.setDeletedtime(params.getDate("deletedtime"));		pojo.setDeleteduserid(params.getString("deleteduserid"));		pojo.setDeletedflag(params.getByte("deletedflag"));		pojo.setReserved1(params.getInteger("reserved1"));		pojo.setReserved2(params.getString("reserved2"));		return dto.edit(commonUtil.toCommon(pojo));	}	
	@RequestMapping(OrganizatioControllerConstant.ACTION_LIST)	public ApiResultItem list(@RequestBody JSONObject params) throws Exception{		return dto.list(commonUtil.success());	}	
	@RequestMapping(OrganizatioControllerConstant.ACTION_DELETE)	public ApiResultItem delete(@RequestBody JSONObject params) throws Exception{		RmtOrganizationInfo pojo = new RmtOrganizationInfo();		pojo.setId(params.getString("id"));		return dto.delete(commonUtil.toCommon(pojo));	}}