package com.shineon.coder.action ;import com.shineon.coder.db.pojo.RmtPrivilegeGroupInfo;import com.shineon.coder.db.pojo.RmtPrivilegeInfo;import com.shineon.coder.service.convert.util.RmtPrivilegeGroupInfoCommonUtil;import lombok.extern.slf4j.Slf4j;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.bind.annotation.RequestMapping;import com.shineon.coder.service.convert.CommonItem;import org.springframework.beans.factory.annotation.Autowired;import com.shineon.coder.service.dto.PrivilegeGroupDTO;import com.shineon.coder.kernel.constant.action.PrivilegeGroupActionConstant;import org.springframework.web.bind.annotation.RequestBody;import com.alibaba.fastjson.JSONObject;import com.shineon.coder.db.common.ApiResultItem;@RestController@Slf4jpublic class PrivilegeGroupController {		@Autowired	PrivilegeGroupDTO dto;		@Autowired	RmtPrivilegeGroupInfoCommonUtil commonUtil;		@RequestMapping(PrivilegeGroupActionConstant.ACTION_GET)	public ApiResultItem get(@RequestBody JSONObject params) throws Exception{		String id = params.getString("id");		RmtPrivilegeGroupInfo groupInfo =new RmtPrivilegeGroupInfo();		groupInfo.setId(id);		return dto.get(commonUtil.toCommon(groupInfo));	}		@RequestMapping(PrivilegeGroupActionConstant.ACTION_EDIT)	public ApiResultItem edit(@RequestBody JSONObject params) throws Exception{		RmtPrivilegeGroupInfo groupInfo = new RmtPrivilegeGroupInfo();		groupInfo.setId(params.getString("id"));		groupInfo.setPrivilegegroupname(params.getString("name"));		return dto.edit(commonUtil.toCommon(groupInfo));	}		@RequestMapping(PrivilegeGroupActionConstant.ACTION_LIST)	public ApiResultItem list(@RequestBody JSONObject params) throws Exception{		return dto.list(commonUtil.success());	}		@RequestMapping(PrivilegeGroupActionConstant.ACTION_DELETE)	public ApiResultItem delete(@RequestBody JSONObject params) throws Exception{		String id = params.getString("id");		RmtPrivilegeGroupInfo groupInfo =new RmtPrivilegeGroupInfo();		groupInfo.setId(id);		return dto.delete(commonUtil.toCommon(groupInfo));	}}