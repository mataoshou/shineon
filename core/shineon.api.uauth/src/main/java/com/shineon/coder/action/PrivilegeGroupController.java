package com.shineon.coder.action ;import com.shineon.coder.service.convert.util.RmtPrivilegeGroupInfoCommonUtil;import lombok.extern.slf4j.Slf4j;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.bind.annotation.RequestMapping;import com.shineon.coder.service.convert.CommonItem;import org.springframework.beans.factory.annotation.Autowired;import com.shineon.coder.service.dto.PrivilegeGroupDTO;import com.shineon.coder.kernel.constant.action.PrivilegeGroupControllerConstant;import org.springframework.web.bind.annotation.RequestBody;import com.alibaba.fastjson.JSONObject;import com.shineon.coder.db.common.ApiResultItem;import com.shineon.coder.db.pojo.RmtPrivilegeGroupInfo;@RestController@Slf4jpublic class PrivilegeGroupController {	
	@Autowired	PrivilegeGroupDTO dto;	
	@Autowired	RmtPrivilegeGroupInfoCommonUtil commonUtil;	
	@RequestMapping(PrivilegeGroupControllerConstant.ACTION_GET)	public ApiResultItem get(@RequestBody JSONObject params) throws Exception{		RmtPrivilegeGroupInfo pojo = new RmtPrivilegeGroupInfo();		pojo.setId(params.getString("id"));		return dto.get(commonUtil.toCommon(pojo));	}	
	@RequestMapping(PrivilegeGroupControllerConstant.ACTION_EDIT)	public ApiResultItem edit(@RequestBody JSONObject params) throws Exception{		RmtPrivilegeGroupInfo pojo = new RmtPrivilegeGroupInfo();		pojo.setId(params.getString("id"));		pojo.setPrivilegegroupname(params.getString("privilegegroupname"));		pojo.setPrivilegegrouptype(params.getInteger("privilegegrouptype"));		pojo.setDescription(params.getString("description"));		pojo.setShoworder(params.getInteger("showorder"));		pojo.setReserved1(params.getInteger("reserved1"));		pojo.setReserved2(params.getString("reserved2"));		pojo.setPrivilegeset(params.getString("privilegeset"));		return dto.edit(commonUtil.toCommon(pojo));	}	
	@RequestMapping(PrivilegeGroupControllerConstant.ACTION_LIST)	public ApiResultItem list(@RequestBody JSONObject params) throws Exception{		return dto.list(commonUtil.success());	}	
	@RequestMapping(PrivilegeGroupControllerConstant.ACTION_DELETE)	public ApiResultItem delete(@RequestBody JSONObject params) throws Exception{		RmtPrivilegeGroupInfo pojo = new RmtPrivilegeGroupInfo();		pojo.setId(params.getString("id"));		return dto.delete(commonUtil.toCommon(pojo));	}}